[{"F:\\projects\\React\\buyorsell\\src\\App.js":"1","F:\\projects\\React\\buyorsell\\src\\Components\\Search\\Search.js":"2","F:\\projects\\React\\buyorsell\\src\\Components\\Home\\Home.js":"3","F:\\projects\\React\\buyorsell\\src\\FirebaseFunctions\\firebase.utils.js":"4","F:\\projects\\React\\buyorsell\\src\\reportWebVitals.js":"5","F:\\projects\\React\\buyorsell\\src\\stocksData.js":"6","F:\\projects\\React\\buyorsell\\src\\Components\\StockDetailPage\\StockDetailsPage.js":"7","F:\\projects\\React\\buyorsell\\src\\index.js":"8","F:\\projects\\React\\buyorsell\\src\\Components\\ChatComponent\\ChatComponent.js":"9","F:\\projects\\React\\buyorsell\\src\\Components\\GraphComponent\\GraphComponent.js":"10"},{"size":535,"mtime":1610788300843,"results":"11","hashOfConfig":"12"},{"size":2152,"mtime":1611165929797,"results":"13","hashOfConfig":"12"},{"size":248,"mtime":1610778786405,"results":"14","hashOfConfig":"12"},{"size":1457,"mtime":1610893645885,"results":"15","hashOfConfig":"12"},{"size":362,"mtime":1610766840482,"results":"16","hashOfConfig":"12"},{"size":164198,"mtime":1610786969638,"results":"17","hashOfConfig":"12"},{"size":591,"mtime":1611163901271,"results":"18","hashOfConfig":"12"},{"size":500,"mtime":1610766840482,"results":"19","hashOfConfig":"12"},{"size":3344,"mtime":1611163196694,"results":"20","hashOfConfig":"12"},{"size":6639,"mtime":1611163992580,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1o2rwe0",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"F:\\projects\\React\\buyorsell\\src\\App.js",[],["45","46"],"F:\\projects\\React\\buyorsell\\src\\Components\\Search\\Search.js",["47","48"],"F:\\projects\\React\\buyorsell\\src\\Components\\Home\\Home.js",[],"F:\\projects\\React\\buyorsell\\src\\FirebaseFunctions\\firebase.utils.js",[],"F:\\projects\\React\\buyorsell\\src\\reportWebVitals.js",[],"F:\\projects\\React\\buyorsell\\src\\stocksData.js",[],"F:\\projects\\React\\buyorsell\\src\\Components\\StockDetailPage\\StockDetailsPage.js",[],"F:\\projects\\React\\buyorsell\\src\\index.js",[],["49","50"],"F:\\projects\\React\\buyorsell\\src\\Components\\ChatComponent\\ChatComponent.js",["51","52","53"],"F:\\projects\\React\\buyorsell\\src\\Components\\GraphComponent\\GraphComponent.js",["54","55","56","57","58"],"import React, { useState, useEffect } from \"react\";\r\nimport DonutChart from 'react-donut-chart';\r\nimport { createStockDocument , firestore } from \"../../FirebaseFunctions/firebase.utils\";\r\n\r\nimport \"./GraphComponent.css\"\r\n\r\nconst GraphComponent = ({ stockName }) => {\r\n\r\n    const [userChoiceFromStorage, setUserChoiceFromStorage] = useState({})\r\n    const [buttonClicked, setButtonClicked] = useState(false)\r\n    const [buyValue, setBuyValue] = useState(0)\r\n    const [sellValue, setSellValue] = useState(0)\r\n    const [holdValue, setHoldValue] = useState(0)\r\n\r\n    useEffect(() => {\r\n        createStockDocument(stockName)\r\n    },[])\r\n\r\n    const getPercentDetailsFirestore = async () => {\r\n        let reference = await firestore.collection('stockDetails').where('stockName','==',stockName).get()\r\n        reference.forEach(item => {\r\n            setBuyValue(item.data().buyPercent)\r\n            setSellValue(item.data().sellPercent)\r\n            setHoldValue(item.data().holdPercent)\r\n        })\r\n\r\n        //Retrieving the chart data on every snapshot change\r\n        firestore.collection('stockDetails').where('stockName','==', stockName).onSnapshot(querySnapshot => {\r\n            querySnapshot.docChanges().forEach(change => {\r\n                setBuyValue(change.doc.data().buyPercent)\r\n                setSellValue(change.doc.data().sellPercent)\r\n                setHoldValue(change.doc.data().holdPercent)\r\n              });\r\n        })\r\n        \r\n    }\r\n\r\n    //This is to update the page on the page load\r\n    useEffect(() => {\r\n        getPercentDetailsFirestore()\r\n    },[])\r\n\r\n\r\n    const handleBuySellHoldPercent = async e => {\r\n        let buttonValue = e.target.value\r\n        \r\n        if(buttonValue === \"Buy\") {\r\n            setButtonClicked(true)\r\n            setBuyValue(buyValue + 1)\r\n            localStorage.setItem(`${stockName}`,JSON.stringify({stockName: stockName , action: 'BUY'}))\r\n            await firestore.doc(`/stockDetails/${stockName}`).update({\r\n                buyPercent : buyValue + 1\r\n            })\r\n            setButtonClicked(false)\r\n        } else if(buttonValue === \"Sell\") {\r\n            setButtonClicked(true)\r\n            setSellValue(sellValue + 1)\r\n            localStorage.setItem(`${stockName}`,JSON.stringify({stockName: stockName , action: 'SELL'}))\r\n            await firestore.doc(`/stockDetails/${stockName}`).update({\r\n                sellPercent : sellValue + 1\r\n            })\r\n            setButtonClicked(false)\r\n        } else {\r\n            setButtonClicked(true)\r\n            setHoldValue(holdValue + 1)\r\n            localStorage.setItem(`${stockName}`,JSON.stringify({stockName: stockName , action: 'HOLD'}))\r\n            await firestore.doc(`/stockDetails/${stockName}`).update({\r\n                holdPercent : holdValue + 1\r\n            })\r\n            setButtonClicked(false)\r\n        }\r\n    }\r\n\r\n    //Removing LocalStorage after 15 mins\r\n    useEffect(() => {\r\n        if(localStorage.getItem(`${stockName}`)) {\r\n            setTimeout(() => {\r\n                localStorage.removeItem(`${stockName}`)\r\n            }, 900000)  // set for 15 minutes currently\r\n        }\r\n        \r\n    },[buttonClicked])\r\n\r\n    //GETTING USER CHOICE FROM STORAGE\r\n    const getUserChoiceFromStorage = () => {\r\n        let storageData = JSON.parse(localStorage.getItem(`${stockName}`))\r\n        setUserChoiceFromStorage(storageData)  // SETUSERCHOICE IS A STATE CONTAINER; GETUSERCHOICE IS A FUNCTION\r\n    }\r\n\r\n    useEffect(() => {\r\n        let storageData = localStorage.getItem(`${stockName}`)\r\n        if(!storageData) {\r\n            setUserChoiceFromStorage({})\r\n        } else {\r\n            setUserChoiceFromStorage(JSON.parse(storageData))\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(buttonClicked) {\r\n            getUserChoiceFromStorage()\r\n        }\r\n    },[buttonClicked])\r\n \r\n    const totalValue = buyValue + sellValue + holdValue\r\n\r\n    const buyPercent = buyValue > 0 ? parseFloat(((buyValue/totalValue)* 100).toFixed(2)) :  0\r\n    const sellPercent = sellValue > 0 ? parseFloat(((sellValue/totalValue)* 100).toFixed(2)) : 0\r\n    const holdPercent = holdValue > 0 ? parseFloat(((holdValue/totalValue)* 100).toFixed(2)) : 0\r\n\r\n\r\n    return (\r\n        <div>\r\n                    {/* Donut chart */}\r\n                    <DonutChart \r\n                        data = {[\r\n                            {\r\n                                label: 'Buy',\r\n                                value: buyPercent\r\n                            },\r\n                            {\r\n                                label: 'Sell',\r\n                                value: sellPercent\r\n                            },\r\n                            {\r\n                                label: 'Hold',\r\n                                value: holdPercent\r\n                            }\r\n                        ]}\r\n                        colors = {['#2a9d8f' , '#e76f51', '#e9c46a']}\r\n                        onMouseEnter = {() => false}\r\n                    />\r\n                    <div className=\"buttonBlock\"> \r\n                        {/* Condition for buy button to display */}\r\n                        { (userChoiceFromStorage.stockName !== stockName \r\n                            || \r\n                        ((userChoiceFromStorage.action !== \"BUY\" ) && (userChoiceFromStorage.stockName === stockName || !userChoiceFromStorage.stockName ))) \r\n                        && \r\n                        <button onClick={handleBuySellHoldPercent} value=\"Buy\" className=\"buyButton\">Buy</button>} \r\n\r\n                        {/* Condition for sell button to display */}\r\n                        { (userChoiceFromStorage.stockName !== stockName \r\n                            || \r\n                        ((userChoiceFromStorage.action !== \"SELL\") && (userChoiceFromStorage.stockName === stockName || !userChoiceFromStorage.stockName ))) \r\n                        && \r\n                        <button onClick={handleBuySellHoldPercent} value=\"Sell\" className=\"sellButton\">Sell</button>}\r\n\r\n                        {/* Condition for hold button to display */}\r\n                        { (userChoiceFromStorage.stockName !== stockName \r\n                            || \r\n                        ((userChoiceFromStorage.action !== \"HOLD\") && (userChoiceFromStorage.stockName === stockName || !userChoiceFromStorage.stockName ))) \r\n                        && \r\n                        <button onClick={handleBuySellHoldPercent} value=\"Hold\" className=\"holdButton\">Hold</button>}                    \r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default GraphComponent;",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":26,"column":7,"nodeType":"69","endLine":26,"endColumn":9,"suggestions":"70"},{"ruleId":"59","replacedBy":"71"},{"ruleId":"61","replacedBy":"72"},{"ruleId":"63","severity":1,"message":"73","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":26},{"ruleId":"67","severity":1,"message":"74","line":18,"column":7,"nodeType":"69","endLine":18,"endColumn":20,"suggestions":"75"},{"ruleId":"67","severity":1,"message":"76","line":66,"column":7,"nodeType":"69","endLine":66,"endColumn":9,"suggestions":"77"},{"ruleId":"67","severity":1,"message":"78","line":17,"column":7,"nodeType":"69","endLine":17,"endColumn":9,"suggestions":"79"},{"ruleId":"67","severity":1,"message":"80","line":41,"column":7,"nodeType":"69","endLine":41,"endColumn":9,"suggestions":"81"},{"ruleId":"67","severity":1,"message":"78","line":82,"column":7,"nodeType":"69","endLine":82,"endColumn":22,"suggestions":"82"},{"ruleId":"67","severity":1,"message":"78","line":97,"column":7,"nodeType":"69","endLine":97,"endColumn":9,"suggestions":"83"},{"ruleId":"67","severity":1,"message":"84","line":103,"column":7,"nodeType":"69","endLine":103,"endColumn":22,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'firestore' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allStocksData.length'. Either include it or remove the dependency array.","ArrayExpression",["88"],["86"],["87"],"'IoIosArrowDropup' is defined but never used.","React Hook useEffect has a missing dependency: 'scrollToBottom'. Either include it or remove the dependency array.",["89"],"React Hook useEffect has a missing dependency: 'getMessagesFromFirestore'. Either include it or remove the dependency array.",["90"],"React Hook useEffect has a missing dependency: 'stockName'. Either include it or remove the dependency array.",["91"],"React Hook useEffect has a missing dependency: 'getPercentDetailsFirestore'. Either include it or remove the dependency array.",["92"],["93"],["94"],"React Hook useEffect has a missing dependency: 'getUserChoiceFromStorage'. Either include it or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"102","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [allStocksData.length]",{"range":"111","text":"112"},"Update the dependencies array to be: [allMessages, scrollToBottom]",{"range":"113","text":"114"},"Update the dependencies array to be: [getMessagesFromFirestore]",{"range":"115","text":"116"},"Update the dependencies array to be: [stockName]",{"range":"117","text":"118"},"Update the dependencies array to be: [getPercentDetailsFirestore]",{"range":"119","text":"120"},"Update the dependencies array to be: [buttonClicked, stockName]",{"range":"121","text":"122"},{"range":"123","text":"118"},"Update the dependencies array to be: [buttonClicked, getUserChoiceFromStorage]",{"range":"124","text":"125"},[812,814],"[allStocksData.length]",[586,599],"[allMessages, scrollToBottom]",[2168,2170],"[getMessagesFromFirestore]",[632,634],"[stockName]",[1585,1587],"[getPercentDetailsFirestore]",[3162,3177],"[buttonClicked, stockName]",[3723,3725],[3839,3854],"[buttonClicked, getUserChoiceFromStorage]"]